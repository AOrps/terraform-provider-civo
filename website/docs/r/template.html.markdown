---
layout: "civo"
page_title: "Civo: civo_template"
sidebar_current: "docs-civo-resource-template"
description: |-
  Provides a Civo Template resource. This can be used to create, modify, and delete Templates.
---

# civo\_template

Provides a Civo Template resource.
This can be used to create, modify, and delete Templates.

## Example Usage

```hcl
resource "civo_template" "my-custom-template" {
    code = "my-template"
    name = "My Template"
    image_id = element(data.civo_template.debian.templates, 0).image_id
    short_description = "my template"
    description = "my template with mc"
    default_username = "admin"
    cloud_config = file("cloud-init.yaml")
}
```

## Argument Reference

The following arguments are supported:

* `code` - (Required) This is a unqiue, alphanumerical, short, human readable code for the template.
* `name` - (Required) This is a short human readable name for the template
* `volume_id` - (Optional) This is the ID of a bootable volume, either owned by you or global
(optional; but must be specified if no image_id is specified)
* `image_id` - (Optional) This is the Image ID of any default template or the ID of another template
either owned by you or global (optional; but must be specified if no volume_id is specified).
* `short_description` - (Optional) A one line description of the template
* `description` - (Optional) A multi-line description of the template, in Markdown format
* `default_username` - (Optional) The default username to suggest that the user creates
* `cloud_config` - (Optional) Commonly referred to as 'user-data', this is a customisation script that is run after
the instance is first booted. We recommend using cloud-config as it's a great distribution-agnostic
way of configuring cloud servers. If you put `$INITIAL_USER` in your script, this will automatically
be replaced by the initial user chosen when creating the instance, `$INITIAL_PASSWORD` will be
replaced with the random password generated by the system, `$HOSTNAME` is the fully qualified
domain name of the instance and `$SSH_KEY` will be the content of the SSH public key.
(this is technically optional, but you won't really be able to use instances without it -
see our learn guide on templates for more information).

## Attributes Reference

The following attributes are exported:

* `id` - The id of the template
* `code` - A unqiue, alphanumerical, short, human readable code for the template.
* `name` - A short human readable name for the template
* `volume_id` - The ID of a bootable volume, either owned by you or global.
* `image_id` - The Image ID of any default template or the ID of another template.
* `short_description` - A one line description of the template
* `description` - A multi-line description of the template, in Markdown format
* `default_username` - The default username to suggest that the user creates
* `cloud_config` - Commonly referred to as 'user-data', this is a customisation script that is run after
the instance is first booted.

## Import

Template can be imported using the template `code`, e.g.

```
terraform import civo_template.my-custom-template my-template-code 
```